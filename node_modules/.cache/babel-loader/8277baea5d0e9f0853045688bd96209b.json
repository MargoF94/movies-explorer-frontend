{"ast":null,"code":"var _jsxFileName = \"/Users/localmoyashi/dev/movies-explorer-frontend/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\nimport Main from '../Main/Main';\nimport Movies from '../Movies/Movies';\nimport SavedMovies from '../SavedMovies/SavedMovies';\nimport Profile from '../Profile/Profile';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport Page404 from '../Page404/Page404';\nimport InfoTooltip from '../InfoTooltip/InfoTooltip';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport * as tooltip from '../../utils/tooltip';\nimport * as MainApi from '../../utils/MainApi';\nimport * as MoviesApi from '../../utils/MoviesApi';\nimport './App.css';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = useState(false);\n  const [infoToolTipInfo, setInfoToolTipInfo] = useState({});\n  const [movies, setMovies] = useState([]); // Фильмы, полученные от Api\n\n  const [savedMovies, setSavedMovies] = useState([]); // Фильмы, сохраненные пользователем\n\n  const [moviesToRender, setMoviesToRender] = useState([]);\n  const [movieSearchResult, setMovieSearchResult] = useState([]);\n  const [isShortMovieChecked, setIsShortMovieChecked] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isNoResults, setIsNoResuls] = useState(false); // ЛОКАЛЬНОЕ ХРАНИЛИЩЕ\n  // Фильмы, полученные после фильтрации\n  // const searchResultLocalStorage = JSON.parse(localStorage.getItem('searchResults'));\n  // Текст запроса\n\n  const searchWordLocalStorage = localStorage.getItem('searchWord'); // Состояние переключателя\n\n  const filterStateLocatStorage = localStorage.getItem('filterState'); // Обработка регистрации\n\n  function handleRegister(name, email, password) {\n    MainApi.register(email, password, name).then(res => {\n      if (res.ok) {\n        history.push('/signin');\n        setInfoToolTipInfo({\n          mesage: tooltip.registrationSuccess,\n          image: tooltip.successIcon\n        });\n      } else {\n        setInfoToolTipInfo({\n          message: tooltip.registrationFail,\n          image: tooltip.successIcon\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n      setInfoToolTipInfo({\n        message: tooltip.registrationFail,\n        image: tooltip.failIcon\n      });\n    }).finally(() => {\n      setIsInfoToolTipOpen(true);\n    });\n  } // Обработка логина\n\n\n  function handleLogin(email, password) {\n    if (!email || !password) {\n      console.log('No email or password on login; aborting.');\n      console.log(`Email: ${email}`);\n      console.log(`Password: ${password}`);\n      return;\n    }\n\n    MainApi.login(email, password).then(data => {\n      if (!data.jwt) {\n        throw new Error('Произошла ошибка (авторизации на фронте)');\n      }\n\n      localStorage.setItem('jwt', data.jwt);\n      localStorage.setItem('searchResults', []);\n      localStorage.setItem('filterState', false);\n      localStorage.setItem('searchWord', '');\n      return data._id;\n    }).then(id => {\n      tokenCheck();\n      setCurrentUser({\n        _id: id\n      });\n      setIsLoggedIn(true);\n      history.push('/movies');\n      setInfoToolTipInfo({\n        message: tooltip.loginSuccess,\n        image: tooltip.successIcon\n      });\n    }).then(() => {\n      Promise.all([MoviesApi.getMovies(), MainApi.getSavedMovies()]).then(_ref => {\n        let [allMovies, savedMovies] = _ref;\n        console.log(`In MainApi.getSavedMovies: savedMovies: ${savedMovies}`);\n        console.log(`In MainApi.getSavedMovies: savedMovies: ${Array.isArray(savedMovies)}`);\n        setMovies(allMovies);\n\n        if (savedMovies) {\n          setSavedMovies(savedMovies);\n        } else {\n          setSavedMovies([]);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {\n      console.log(err);\n      setInfoToolTipInfo({\n        message: tooltip.loginFail,\n        image: tooltip.failIcon\n      });\n    }).finally(() => {\n      console.log(`Before Popup open: ${isLoggedIn}`);\n      setIsInfoToolTipOpen(true);\n    });\n  } // Обработка обновления профиля\n\n\n  function handleEditProfileSubmit(name, email) {\n    MainApi.editProfile(name, email).then(data => {\n      setCurrentUser(data);\n      setInfoToolTipInfo({\n        message: tooltip.updateSuccess,\n        image: tooltip.successIcon\n      });\n    }).catch(err => {\n      console.log(err);\n      setInfoToolTipInfo({\n        message: tooltip.updateFail,\n        image: tooltip.failIcon\n      });\n    }).finally(() => {\n      setIsInfoToolTipOpen(true);\n    });\n  }\n\n  function handleLogOut() {\n    localStorage.removeItem('jwt');\n    localStorage.removeItem('searcResults');\n    localStorage.removeItem('searchWord');\n    localStorage.removeItem('filterState');\n    setIsLoggedIn(false);\n    history.push('/signin');\n  }\n\n  function closePopups() {\n    setIsInfoToolTipOpen(false);\n  } // Добавить фильм в библиотеку сохраненных фильмов\n  // или оповестить юзера об ошибке\n\n\n  function handleSetLike(movie) {\n    console.log(`In HandleSetLike: jwt: ${localStorage.getItem('jwt')}`);\n    console.log(`In HandleSetLike: movie: ${movie}`);\n    MainApi.createLocalCard(movie).then(createdMovie => {\n      console.log(`Saved movie in handleSetLike: ${createdMovie}`);\n      setSavedMovies([createdMovie, ...savedMovies]);\n    }).catch(err => {\n      console.log(err);\n      setInfoToolTipInfo({\n        message: tooltip.saveFail,\n        image: tooltip.failIcon\n      });\n      setIsInfoToolTipOpen(true);\n    });\n  }\n\n  function handleRemoveLike(movie) {\n    MainApi.deleteLocalMovie(movie.movieId).then(() => {\n      MainApi.getSavedMovies.then(movies => {\n        setSavedMovies(movies);\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {\n      console.log(err);\n      setInfoToolTipInfo({\n        message: tooltip.removeFail,\n        image: tooltip.failIcon\n      });\n      setIsInfoToolTipOpen(true);\n    });\n  } // Переключатель состояния фильтра короткометражек\n\n\n  function toggleCheckBox() {\n    setIsShortMovieChecked(!isShortMovieChecked);\n  } // Извлекает и записывает данные с локального хранилища в переменную состояния\n\n\n  function getSearchResults() {\n    const searchResults = JSON.parse(localStorage.getItem('searchResuts'));\n    setMovieSearchResult(searchResults === null ? [] : searchResults);\n  } // Функция по фильтрации массивов с фильмами по ключевому слову\n  // и длительности\n\n\n  function filterBySearchWord(list, word, isShortOn) {\n    if (list.length > 0) {\n      if (isShortOn) {\n        return list.filter(movie => movie.nameRU.toLowerCase().includes(word.toLowerCase()) && movie.duration < 40);\n      } else {\n        return list.filter(movie => movie.nameRU.toLowerCase().includes(word.toLowerCase()));\n      }\n    } else {\n      return [];\n    }\n  }\n\n  function setRender() {\n    const searchResultLocalStorage = localStorage.getItem('searchResults');\n\n    if (location.pathname === '/movies') {\n      if (searchResultLocalStorage.length === 0 || searchResultLocalStorage === null) {\n        setMoviesToRender([]);\n        setIsNoResuls(true);\n      } else {\n        setMoviesToRender(JSON.parse(localStorage.getItem('searchResults')));\n        setIsNoResuls(false);\n      }\n    } else if (location.pathname === '/saved-movies') {\n      if (savedMovies.length === 0 || savedMovies === null) {\n        setMoviesToRender([]);\n        setIsNoResuls(true);\n      } else {\n        setMoviesToRender(savedMovies);\n        setIsNoResuls(false);\n      }\n    }\n  } // При отображении фильмов в блоке результатов\n  // фильмы, ранее сохраненные пользователем берутся с сервера\n  // (так как только на них будет ярлык сохраненных));\n\n\n  function handleSearchRequest(word) {\n    setIsLoading(true);\n    setTimeout(() => {\n      // Проверяем все фильмы\n      // Проверяем сохраненные фильмы\n      const allFilteredMovies = filterBySearchWord(movies, word, isShortMovieChecked);\n      const allSavedMovies = filterBySearchWord(savedMovies, word, isShortMovieChecked); // Сравниваем два массива,\n      // повторяющиеся фильмы берем с серверной стороны\n\n      const movieList = allFilteredMovies.map(movie => {\n        const savedMovie = allSavedMovies.find(savedM => savedM.movieId === movie.id);\n        return savedMovie !== null && savedMovie !== void 0 ? savedMovie : movie;\n      }); // Если результатов нет - записываем в переменную пустой массив\n\n      if (movieList !== null && movieList.length !== 0) {\n        localStorage.setItem('searchResults', JSON.stringify(movieList));\n        getSearchResults();\n      } else {\n        localStorage.setItem('searchResults', []);\n        getSearchResults();\n      }\n\n      setRender();\n      setIsLoading(false);\n    }, 1000);\n  } // Проверяем наличие токена в локальном хранилище\n  // если токен присутствует - \n  // меняем состояние логина и\n  // забираем данные о юзере с сервера и сохранем в переменную состояния. \n\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt'); // const savedMoviesFromStorage = (localStorage.getItem('searchResults') !== null && isLoggedIn) ?\n    //   JSON.parse(localStorage.getItem('searchResults')) :\n    //   [];\n\n    console.log(`Token in tokenCheck: ${jwt}`);\n    console.log(`Token in tokenCheck: idLoggedIn ${isLoggedIn}`);\n    console.log(`22222 In getSearchResults: ${movieSearchResult}`);\n\n    if (jwt) {\n      MainApi.getContent(jwt).then(user => {\n        if (user) {\n          setIsLoggedIn(true);\n          setCurrentUser(user); // setMovieSearchResult((localStorage.getItem('searchResults') !== null && isLoggedIn) ?\n          // JSON.parse(localStorage.getItem('searchResults')) :\n          // []);\n\n          location.pathname === '/signin' ? history.push('/movies') : history.push(location.pathname);\n          console.log(`Token in tokenCheck: idLoggedIn ${isLoggedIn}`);\n          console.log(`In tokenCheck: getContent currentUSer: ${currentUser}`);\n          console.log(`In tokenCheck: getContent response: ${JSON.stringify(user)}`);\n        } else {\n          localStorage.removeItem('jwt');\n        }\n      }).then(() => {\n        console.log(`99999999 isLoggedIn ${isLoggedIn}`);\n        console.log(`searchResults ${localStorage.getItem('searchResults')}`);\n        setMovieSearchResult(localStorage.getItem('searchResults') > 0 ? JSON.parse(localStorage.getItem('searchResults')) : []); // setRender();\n      }).catch(err => {\n        console.log(err);\n        localStorage.removeItem('jwt');\n      });\n    }\n  } // useEffect(() => {\n  //   console.log(`isLoggedIn ${isLoggedIn}`);\n  //   console.log(`searchResults ${localStorage.getItem('searchResults')}`);\n  //   if(isLoggedIn) {\n  //     setMovieSearchResult((localStorage.getItem('searchResults') > 0) ?\n  //       JSON.parse(localStorage.getItem('searchResults')) :\n  //       []);\n  //   }\n  // }, [isLoggedIn])\n  // Если пользователь залогинен\n  // получаем все фильмы с API и сохраненные юзером фильмы\n  // useEffect(() => {\n  //   console.log(`Fetching movies...`);\n  //   if(isLoggedIn) {\n  //     Promise.all([\n  //       MoviesApi.getMovies(),\n  //       MainApi.getSavedMovies()\n  //     ])\n  //     .then(([allMovies, savedMovies]) => {\n  //       console.log(`In MainApi.getSavedMovies: savedMovies: ${savedMovies}`);\n  //       console.log(`In MainApi.getSavedMovies: savedMovies: ${Array.isArray(savedMovies)}`);\n  //       setMovies(allMovies);\n  //       if (savedMovies) {\n  //         setSavedMovies(savedMovies);\n  //       } else {\n  //         setSavedMovies([]);\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     })\n  //   }    \n  // }, [isLoggedIn])\n  // Проверяем токен при передвижению по сайту\n  // Перезаписываем отфильтрованные фильмы в переменную состояния\n  // из локального хранилища\n\n\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Main, {\n            isLoggedIn: isLoggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/movies\",\n          component: Movies,\n          movies: movies,\n          moviesToRender: moviesToRender,\n          searchWord: searchWordLocalStorage,\n          handleSetLike: handleSetLike,\n          handleRemoveLike: handleRemoveLike,\n          onSearch: handleSearchRequest,\n          handleCheckboxToggle: toggleCheckBox,\n          setRender: setRender,\n          isLoggedIn: isLoggedIn,\n          isShortMovieChecked: isShortMovieChecked,\n          isNoResults: isNoResults,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/saved-movies\",\n          component: SavedMovies,\n          moviesToRender: moviesToRender,\n          handleRemoveLike: handleRemoveLike,\n          onSearch: handleSearchRequest,\n          handleCheckboxToggle: toggleCheckBox,\n          setRender: setRender,\n          isLoggedIn: isLoggedIn,\n          isShortMovieChecked: isShortMovieChecked,\n          isNoResults: isNoResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/profile\",\n          component: Profile,\n          onSubmit: handleEditProfileSubmit,\n          onLogOut: handleLogOut,\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            handleRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          children: /*#__PURE__*/_jsxDEV(Page404, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isInfoToolTipOpen,\n        onClose: closePopups,\n        info: infoToolTipInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 396,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4ZpxgFvLNCXRT8qnNGwnULJ1uuY=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Route","Switch","useHistory","useLocation","Main","Movies","SavedMovies","Profile","Login","Register","Page404","InfoTooltip","ProtectedRoute","tooltip","MainApi","MoviesApi","CurrentUserContext","App","history","location","isLoggedIn","setIsLoggedIn","currentUser","setCurrentUser","isInfoToolTipOpen","setIsInfoToolTipOpen","infoToolTipInfo","setInfoToolTipInfo","movies","setMovies","savedMovies","setSavedMovies","moviesToRender","setMoviesToRender","movieSearchResult","setMovieSearchResult","isShortMovieChecked","setIsShortMovieChecked","isLoading","setIsLoading","isNoResults","setIsNoResuls","searchWordLocalStorage","localStorage","getItem","filterStateLocatStorage","handleRegister","name","email","password","register","then","res","ok","push","mesage","registrationSuccess","image","successIcon","message","registrationFail","catch","err","console","log","failIcon","finally","handleLogin","login","data","jwt","Error","setItem","_id","id","tokenCheck","loginSuccess","Promise","all","getMovies","getSavedMovies","allMovies","Array","isArray","loginFail","handleEditProfileSubmit","editProfile","updateSuccess","updateFail","handleLogOut","removeItem","closePopups","handleSetLike","movie","createLocalCard","createdMovie","saveFail","handleRemoveLike","deleteLocalMovie","movieId","removeFail","toggleCheckBox","getSearchResults","searchResults","JSON","parse","filterBySearchWord","list","word","isShortOn","length","filter","nameRU","toLowerCase","includes","duration","setRender","searchResultLocalStorage","pathname","handleSearchRequest","setTimeout","allFilteredMovies","allSavedMovies","movieList","map","savedMovie","find","savedM","stringify","getContent","user"],"sources":["/Users/localmoyashi/dev/movies-explorer-frontend/src/components/App/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\nimport Main from '../Main/Main';\nimport Movies from '../Movies/Movies';\nimport SavedMovies from '../SavedMovies/SavedMovies';\nimport Profile from '../Profile/Profile';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport Page404 from '../Page404/Page404';\nimport InfoTooltip from '../InfoTooltip/InfoTooltip';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport * as tooltip from '../../utils/tooltip';\nimport * as MainApi from '../../utils/MainApi';\nimport * as MoviesApi from '../../utils/MoviesApi';\nimport './App.css';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\n\nfunction App() {\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = useState(false);\n  const [infoToolTipInfo, setInfoToolTipInfo] = useState({});\n  const [movies, setMovies] = useState([]); // Фильмы, полученные от Api\n  const [savedMovies, setSavedMovies] = useState([]); // Фильмы, сохраненные пользователем\n  const [moviesToRender, setMoviesToRender] = useState([]);\n  const [movieSearchResult, setMovieSearchResult] = useState([]);\n  const [isShortMovieChecked, setIsShortMovieChecked] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isNoResults, setIsNoResuls] = useState(false);\n\n  // ЛОКАЛЬНОЕ ХРАНИЛИЩЕ\n\n  // Фильмы, полученные после фильтрации\n  // const searchResultLocalStorage = JSON.parse(localStorage.getItem('searchResults'));\n  // Текст запроса\n  const searchWordLocalStorage = localStorage.getItem('searchWord');\n  // Состояние переключателя\n  const filterStateLocatStorage = localStorage.getItem('filterState');\n\n  // Обработка регистрации\n\n  function handleRegister (name, email, password) {\n    MainApi.register(email, password, name)\n      .then((res) => {\n        if (res.ok) {\n          history.push('/signin');\n          setInfoToolTipInfo({\n            mesage: tooltip.registrationSuccess,\n            image: tooltip.successIcon\n          });\n        } else {\n          setInfoToolTipInfo({\n            message: tooltip.registrationFail,\n            image: tooltip.successIcon\n          })\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setInfoToolTipInfo({\n          message: tooltip.registrationFail,\n          image: tooltip.failIcon\n        });\n      })\n      .finally(() => {\n        setIsInfoToolTipOpen(true);\n      })\n  }\n  \n  // Обработка логина\n\n  function handleLogin (email, password) {\n    if (!email || !password) {\n      console.log('No email or password on login; aborting.');\n      console.log(`Email: ${email}`);\n      console.log(`Password: ${password}`);\n      return;\n    }\n    \n    MainApi.login(email, password)\n      .then((data) => {\n        if(!data.jwt) {\n          throw new Error('Произошла ошибка (авторизации на фронте)');\n        }\n        localStorage.setItem('jwt', data.jwt);\n        localStorage.setItem('searchResults', []);\n        localStorage.setItem('filterState', false);\n        localStorage.setItem('searchWord', '');\n        return data._id;\n      })\n      .then((id) => {\n        tokenCheck();\n        setCurrentUser({\n          _id: id,\n        });\n        setIsLoggedIn(true);\n        history.push('/movies');\n        setInfoToolTipInfo({\n          message: tooltip.loginSuccess,\n          image: tooltip.successIcon\n        })\n      })\n      .then(() => {\n        Promise.all([\n          MoviesApi.getMovies(),\n          MainApi.getSavedMovies()\n        ])\n        .then(([allMovies, savedMovies]) => {\n          console.log(`In MainApi.getSavedMovies: savedMovies: ${savedMovies}`);\n          console.log(`In MainApi.getSavedMovies: savedMovies: ${Array.isArray(savedMovies)}`);\n          setMovies(allMovies);\n          if (savedMovies) {\n            setSavedMovies(savedMovies);\n          } else {\n            setSavedMovies([]);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        })\n      })\n      .catch((err) => {\n        console.log(err);\n        setInfoToolTipInfo({\n          message: tooltip.loginFail,\n          image: tooltip.failIcon\n        });\n      })\n      .finally(() => {\n        console.log(`Before Popup open: ${isLoggedIn}`)\n        setIsInfoToolTipOpen(true);\n      });\n  }\n\n  // Обработка обновления профиля\n\n  function handleEditProfileSubmit (name, email) {\n    MainApi.editProfile(name, email)\n      .then((data) => {\n        setCurrentUser(data);\n        setInfoToolTipInfo({\n          message: tooltip.updateSuccess,\n          image: tooltip.successIcon\n        })\n      })\n      .catch((err) => {\n        console.log(err);\n        setInfoToolTipInfo({\n          message: tooltip.updateFail,\n          image: tooltip.failIcon\n        })\n      })\n      .finally(() => {\n        setIsInfoToolTipOpen(true)\n      });\n  }\n\n  function handleLogOut () {\n    localStorage.removeItem('jwt');\n    localStorage.removeItem('searcResults');\n    localStorage.removeItem('searchWord');\n    localStorage.removeItem('filterState');\n    setIsLoggedIn(false);\n    history.push('/signin');\n  }\n\n  function closePopups () {\n    setIsInfoToolTipOpen(false);\n  }\n\n  // Добавить фильм в библиотеку сохраненных фильмов\n  // или оповестить юзера об ошибке\n\n  function handleSetLike(movie) {\n\n    console.log(`In HandleSetLike: jwt: ${localStorage.getItem('jwt')}`);\n    console.log(`In HandleSetLike: movie: ${movie}`);\n\n    MainApi.createLocalCard(movie)\n      .then((createdMovie) => {\n        console.log(`Saved movie in handleSetLike: ${createdMovie}`);\n        setSavedMovies([createdMovie, ...savedMovies])\n      })\n      .catch((err) => {\n        console.log(err);\n        setInfoToolTipInfo({\n          message: tooltip.saveFail,\n          image: tooltip.failIcon\n        });\n        setIsInfoToolTipOpen(true);\n      })\n  }\n\n  function handleRemoveLike (movie) {\n    MainApi.deleteLocalMovie(movie.movieId)\n      .then(() => {\n        MainApi.getSavedMovies\n          .then((movies) => {\n            setSavedMovies(movies);\n          })\n          .catch((err) => {\n            console.log(err);\n          })\n      })\n      .catch((err) => {\n        console.log(err);\n        setInfoToolTipInfo({\n          message: tooltip.removeFail,\n          image: tooltip.failIcon\n        });\n        setIsInfoToolTipOpen(true);\n      })\n  }\n\n  // Переключатель состояния фильтра короткометражек\n  function toggleCheckBox() {\n    setIsShortMovieChecked(!isShortMovieChecked);\n  }\n\n  // Извлекает и записывает данные с локального хранилища в переменную состояния\n  function getSearchResults() {\n    const searchResults = JSON.parse(localStorage.getItem('searchResuts'));\n    setMovieSearchResult(searchResults === null ? [] : searchResults );\n  }\n\n  // Функция по фильтрации массивов с фильмами по ключевому слову\n  // и длительности\n\n  function filterBySearchWord(list, word, isShortOn) {\n    if (list.length > 0) {\n      if (isShortOn) {\n        return list.filter((movie) => movie.nameRU.toLowerCase().includes(word.toLowerCase()) && movie.duration < 40);\n      } else {\n        return list.filter((movie) => movie.nameRU.toLowerCase().includes(word.toLowerCase()));\n      }\n    } else {\n      return [];\n    }\n  }\n\n  function setRender() {\n    const searchResultLocalStorage = localStorage.getItem('searchResults');\n    if (location.pathname === '/movies') {\n      if(searchResultLocalStorage.length === 0 || searchResultLocalStorage === null) {\n        setMoviesToRender([]);\n        setIsNoResuls(true);\n      } else {\n        setMoviesToRender(JSON.parse(localStorage.getItem('searchResults')));\n        setIsNoResuls(false);\n      }\n    } else if (location.pathname === '/saved-movies') {\n      if (savedMovies.length === 0 || savedMovies === null) {\n        setMoviesToRender([]);\n        setIsNoResuls(true);\n      } else {\n        setMoviesToRender(savedMovies);\n        setIsNoResuls(false);\n      }\n    }\n  }\n\n  // При отображении фильмов в блоке результатов\n  // фильмы, ранее сохраненные пользователем берутся с сервера\n  // (так как только на них будет ярлык сохраненных));\n\n  function handleSearchRequest(word) {\n    setIsLoading(true);\n\n    setTimeout(() => {\n      // Проверяем все фильмы\n      // Проверяем сохраненные фильмы\n\n      const allFilteredMovies = filterBySearchWord(movies, word, isShortMovieChecked);\n      const allSavedMovies = filterBySearchWord(savedMovies, word, isShortMovieChecked);\n\n      // Сравниваем два массива,\n      // повторяющиеся фильмы берем с серверной стороны\n      const movieList = allFilteredMovies.map((movie) => {\n        const savedMovie = allSavedMovies.find((savedM) => savedM.movieId === movie.id);\n        return savedMovie ?? movie;\n      })\n\n      // Если результатов нет - записываем в переменную пустой массив\n      if(movieList !== null && movieList.length !== 0) {\n        localStorage.setItem('searchResults', JSON.stringify(movieList));\n        getSearchResults();\n      } else {\n        localStorage.setItem('searchResults', []);\n        getSearchResults();\n      }\n      setRender();\n      setIsLoading(false);\n    }, 1000);\n  }\n\n  // Проверяем наличие токена в локальном хранилище\n  // если токен присутствует - \n  // меняем состояние логина и\n  // забираем данные о юзере с сервера и сохранем в переменную состояния. \n\n  function tokenCheck () {\n    const jwt = localStorage.getItem('jwt');\n    // const savedMoviesFromStorage = (localStorage.getItem('searchResults') !== null && isLoggedIn) ?\n    //   JSON.parse(localStorage.getItem('searchResults')) :\n    //   [];\n\n    console.log(`Token in tokenCheck: ${jwt}`);\n    console.log(`Token in tokenCheck: idLoggedIn ${isLoggedIn}`);\n    console.log(`22222 In getSearchResults: ${movieSearchResult}`);\n\n    if (jwt) {\n      MainApi.getContent(jwt)\n        .then((user) => {\n          if (user) {\n            setIsLoggedIn(true);\n            setCurrentUser(user);\n            // setMovieSearchResult((localStorage.getItem('searchResults') !== null && isLoggedIn) ?\n            // JSON.parse(localStorage.getItem('searchResults')) :\n            // []);\n            location.pathname === '/signin' ? \n              history.push('/movies') :\n              history.push(location.pathname);\n            console.log(`Token in tokenCheck: idLoggedIn ${isLoggedIn}`);\n\n            console.log(`In tokenCheck: getContent currentUSer: ${currentUser}`);\n            console.log(`In tokenCheck: getContent response: ${JSON.stringify(user)}`);\n          } else {\n            localStorage.removeItem('jwt');\n          }\n        })\n        .then(() => {\n          console.log(`99999999 isLoggedIn ${isLoggedIn}`);\n          console.log(`searchResults ${localStorage.getItem('searchResults')}`);\n            setMovieSearchResult((localStorage.getItem('searchResults') > 0) ?\n              JSON.parse(localStorage.getItem('searchResults')) :\n              []);\n          // setRender();\n        })\n        .catch((err) => {\n          console.log(err);\n          localStorage.removeItem('jwt');\n        })\n    }\n  }\n\n  // useEffect(() => {\n  //   console.log(`isLoggedIn ${isLoggedIn}`);\n  //   console.log(`searchResults ${localStorage.getItem('searchResults')}`);\n  //   if(isLoggedIn) {\n  //     setMovieSearchResult((localStorage.getItem('searchResults') > 0) ?\n  //       JSON.parse(localStorage.getItem('searchResults')) :\n  //       []);\n  //   }\n  // }, [isLoggedIn])\n\n  // Если пользователь залогинен\n  // получаем все фильмы с API и сохраненные юзером фильмы\n\n  // useEffect(() => {\n  //   console.log(`Fetching movies...`);\n\n  //   if(isLoggedIn) {\n  //     Promise.all([\n  //       MoviesApi.getMovies(),\n  //       MainApi.getSavedMovies()\n  //     ])\n  //     .then(([allMovies, savedMovies]) => {\n  //       console.log(`In MainApi.getSavedMovies: savedMovies: ${savedMovies}`);\n  //       console.log(`In MainApi.getSavedMovies: savedMovies: ${Array.isArray(savedMovies)}`);\n  //       setMovies(allMovies);\n  //       if (savedMovies) {\n  //         setSavedMovies(savedMovies);\n  //       } else {\n  //         setSavedMovies([]);\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     })\n  //   }    \n  // }, [isLoggedIn])\n\n  // Проверяем токен при передвижению по сайту\n  // Перезаписываем отфильтрованные фильмы в переменную состояния\n  // из локального хранилища\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  \n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"app\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Main\n              isLoggedIn={isLoggedIn} />\n          </Route>\n\n          <ProtectedRoute\n            path=\"/movies\"\n            component={Movies}\n            movies={movies}\n            moviesToRender={moviesToRender}\n            searchWord={searchWordLocalStorage}\n            handleSetLike={handleSetLike}\n            handleRemoveLike={handleRemoveLike}\n            onSearch={handleSearchRequest}\n            handleCheckboxToggle={toggleCheckBox}\n            setRender={setRender}\n            isLoggedIn={isLoggedIn}\n            isShortMovieChecked={isShortMovieChecked}\n            isNoResults={isNoResults}\n            isLoading={isLoading} />\n\n          <ProtectedRoute\n            path=\"/saved-movies\"\n            component={SavedMovies}\n            moviesToRender={moviesToRender}\n            handleRemoveLike={handleRemoveLike}\n            onSearch={handleSearchRequest}\n            handleCheckboxToggle={toggleCheckBox}\n            setRender={setRender}\n            isLoggedIn={isLoggedIn}\n            isShortMovieChecked={isShortMovieChecked}\n            isNoResults={isNoResults} />\n\n          <ProtectedRoute\n            path=\"/profile\"\n            component={Profile}\n            onSubmit={handleEditProfileSubmit}\n            onLogOut={handleLogOut}\n            isLoggedIn={isLoggedIn} />\n\n          <Route path=\"/signin\">\n            <Login\n              handleLogin={handleLogin} />\n          </Route>\n\n          <Route path=\"/signup\">\n            <Register\n              handleRegister={handleRegister} />\n          </Route>\n\n          <Route path=\"*\">\n            <Page404 />\n          </Route>\n        </Switch>\n\n        <InfoTooltip\n          isOpen={isInfoToolTipOpen}\n          onClose={closePopups}\n          info={infoToolTipInfo} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}