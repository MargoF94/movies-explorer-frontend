{"ast":null,"code":"var _jsxFileName = \"/Users/localmoyashi/dev/movies-explorer-frontend/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\nimport Main from '../Main/Main';\nimport Movies from '../Movies/Movies';\nimport SavedMovies from '../SavedMovies/SavedMovies';\nimport Profile from '../Profile/Profile';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport Page404 from '../Page404/Page404';\nimport InfoTooltip from '../InfoTooltip/InfoTooltip';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport * as tooltip from '../../utils/tooltip';\nimport * as MainApi from '../../utils/MainApi';\nimport * as MoviesApi from '../../utils/MoviesApi';\nimport './App.css';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = useState(false);\n  const [infoToolTipInfo, setInfoToolTipInfo] = useState({});\n  const [movies, setMovies] = useState([]); // Фильмы, полученные от Api\n\n  const [savedMovies, setSavedMovies] = useState([]); // Фильмы, сохраненные пользователем\n\n  const [moviesToRender, setMoviesToRender] = useState([]);\n  const [movieSearchResult, setMovieSearchResult] = useState([]);\n  const [isShortMovieChecked, setIsShortMovieChecked] = useState(false);\n  const [isLoading, setIsLoading] = useState(false); // ЛОКАЛЬНОЕ ХРАНИЛИЩЕ\n  // Фильмы, полученные после фильтрации\n  // const searchResultLocalStorage = JSON.parse(localStorage.getItem('searchResults'));\n  // Текст запроса\n\n  const searchWordLocalStorage = localStorage.getItem('searchWord'); // Состояние переключателя\n\n  const filterStateLocatStorage = localStorage.getItem('filterState'); // Обработка регистрации\n\n  function handleRegister(name, email, password) {\n    MainApi.register(email, password, name).then(res => {\n      if (res.ok) {\n        history.push('/signin');\n        setInfoToolTipInfo({\n          mesage: tooltip.registrationSuccess,\n          image: tooltip.successIcon\n        });\n      } else {\n        setInfoToolTipInfo({\n          message: tooltip.registrationFail,\n          image: tooltip.successIcon\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n      setInfoToolTipInfo({\n        message: tooltip.registrationFail,\n        image: tooltip.failIcon\n      });\n    }).finally(() => {\n      setIsInfoToolTipOpen(true);\n    });\n  } // Обработка логина\n\n\n  function handleLogin(email, password) {\n    if (!email || !password) {\n      console.log('No email or password on login; aborting.');\n      console.log(`Email: ${email}`);\n      console.log(`Password: ${password}`);\n      return;\n    }\n\n    MainApi.login(email, password).then(data => {\n      if (!data.jwt) {\n        throw new Error('Произошла ошибка (авторизации на фронте)');\n      }\n\n      localStorage.setItem('jwt', data.jwt);\n      localStorage.setItem('searchResults', []);\n      localStorage.setItem('filterState', false);\n      localStorage.setItem('searchWord', '');\n      return data._id;\n    }).then(id => {\n      tokenCheck();\n      setCurrentUser({\n        _id: id\n      });\n      setIsLoggedIn(true);\n      history.push('/movies');\n      setInfoToolTipInfo({\n        message: tooltip.loginSuccess,\n        image: tooltip.successIcon\n      });\n    }).catch(err => {\n      console.log(err);\n      setInfoToolTipInfo({\n        message: tooltip.loginFail,\n        image: tooltip.failIcon\n      });\n    }).finally(() => {\n      console.log(`Before Popup open: ${isLoggedIn}`);\n      setIsInfoToolTipOpen(true);\n    });\n  } // Обработка обновления профиля\n\n\n  function handleEditProfileSubmit(name, email) {\n    MainApi.editProfile(name, email).then(data => {\n      setCurrentUser(data);\n      setInfoToolTipInfo({\n        message: tooltip.updateSuccess,\n        image: tooltip.successIcon\n      });\n    }).catch(err => {\n      console.log(err);\n      setInfoToolTipInfo({\n        message: tooltip.updateFail,\n        image: tooltip.failIcon\n      });\n    }).finally(() => {\n      setIsInfoToolTipOpen(true);\n    });\n  }\n\n  function handleLogOut() {\n    localStorage.removeItem('jwt');\n    localStorage.removeItem('searcResults');\n    localStorage.removeItem('searchWord');\n    localStorage.removeItem('filterState');\n    setIsLoggedIn(false);\n    history.push('/signin');\n  }\n\n  function closePopups() {\n    setIsInfoToolTipOpen(false);\n  } // Добавить фильм в библиотеку сохраненных фильмов\n  // или оповестить юзера об ошибке\n\n\n  function handleSetLike(movie) {\n    console.log(`In HandleSetLike: jwt: ${localStorage.getItem('jwt')}`);\n    console.log(`In HandleSetLike: movie: ${movie}`);\n    MainApi.createLocalCard(movie).then(createdMovie => {\n      console.log(`Saved movie in handleSetLike: ${createdMovie}`);\n      setSavedMovies([createdMovie, ...savedMovies]);\n    }).catch(err => {\n      console.log(err);\n      setInfoToolTipInfo({\n        message: tooltip.saveFail,\n        image: tooltip.failIcon\n      });\n      setIsInfoToolTipOpen(true);\n    });\n  }\n\n  function handleRemoveLike(movie) {\n    MainApi.deleteLocalMovie(movie.movieId).then(() => {\n      MainApi.getSavedMovies.then(movies => {\n        setSavedMovies(movies);\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {\n      console.log(err);\n      setInfoToolTipInfo({\n        message: tooltip.removeFail,\n        image: tooltip.failIcon\n      });\n      setIsInfoToolTipOpen(true);\n    });\n  }\n\n  function toggleCheckBox() {\n    localStorage.setItem('filterState', !localStorage.getItem('filterState'));\n  } // Извлекает и записывает данные с локального хранилища в переменную состояния\n\n\n  function getSearchResults() {\n    const searchResults = JSON.parse(localStorage.getItem('searchResuts'));\n    setMovieSearchResult(searchResults === null ? [] : searchResults);\n  } // Функция по фильтрации массивов с фильмами по ключевому слову\n  // и длительности\n\n\n  function filterBySearchWord(list, word) {\n    if (list.length > 0) {\n      return list.filter(movie => movie.nameRU.toLowerCase().includes(word.toLowerCase()));\n    } else {\n      return [];\n    }\n  }\n\n  function setRender() {\n    const searchResultLocalStorage = localStorage.getItem('searchResults');\n\n    if (location.pathname === '/movies') {\n      if (searchResultLocalStorage.length === 0 || searchResultLocalStorage === null) {\n        setMoviesToRender([]);\n      } else {\n        setMoviesToRender(JSON.parse(localStorage.getItem('searchResults')));\n      }\n    } else if (location.pathname === '/saved-movies') {\n      if (savedMovies.length === 0 || savedMovies === null) {\n        setMoviesToRender([]);\n      } else {\n        setMoviesToRender(savedMovies);\n      }\n    }\n  } // При отображении фильмов в блоке результатов\n  // фильмы, ранее сохраненные пользователем берутся с сервера\n  // (так как только на них будет ярлык сохраненных));\n\n\n  function handleSearchRequest(word) {\n    // Проверяем все фильмы\n    // Проверяем сохраненные фильмы\n    const allFilteredMovies = filterBySearchWord(movies, word);\n    const allSavedMovies = filterBySearchWord(savedMovies, word); // Сравниваем два массива,\n    // повторяющиеся фильмы берем с серверной стороны\n\n    const movieList = allFilteredMovies.map(movie => {\n      const savedMovie = allSavedMovies.find(savedM => savedM.movieId === movie.id);\n      return savedMovie !== null && savedMovie !== void 0 ? savedMovie : movie;\n    }); // Если результатов нет - записываем в переменную пустой массив\n\n    if (movieList !== null && movieList.length !== 0) {\n      localStorage.setItem('searchResults', JSON.stringify(movieList));\n      getSearchResults();\n      console.log(`handleSearchRequest: local storage is not empty!`);\n    } else {\n      localStorage.setItem('searchResults', []);\n      getSearchResults();\n    }\n\n    setRender();\n  } // Проверяем наличие токена в локальном хранилище\n  // если токен присутствует - \n  // меняем состояние логина и\n  // забираем данные о юзере с сервера и сохранем в переменную состояния. \n\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n    const savedMoviesFromStorage = localStorage.getItem('searchResults') !== null && isLoggedIn ? JSON.parse(localStorage.getItem('searchResults')) : [];\n    console.log(`Token in tokenCheck: ${jwt}`);\n    console.log(`Token in tokenCheck: idLoggedIn ${isLoggedIn}`);\n    console.log(`22222 In getSearchResults: ${movieSearchResult}`);\n\n    if (jwt) {\n      MainApi.getContent(jwt).then(user => {\n        if (user) {\n          setIsLoggedIn(true);\n          setCurrentUser(user);\n          setMovieSearchResult(savedMoviesFromStorage);\n          location.pathname === '/signin' ? history.push('/movies') : history.push(location.pathname);\n          console.log(`Token in tokenCheck: idLoggedIn ${isLoggedIn}`);\n          console.log(`In tokenCheck: getContent currentUSer: ${currentUser}`);\n          console.log(`In tokenCheck: getContent response: ${JSON.stringify(user)}`);\n        } else {\n          localStorage.removeItem('jwt');\n        }\n      }).catch(err => {\n        console.log(err);\n        localStorage.removeItem('jwt');\n      });\n    }\n  } // Если пользователь залогинен\n  // получаем все фильмы с API и сохраненные юзером фильмы\n\n\n  useEffect(() => {\n    console.log(`Fetching movies...`);\n\n    if (isLoggedIn) {\n      Promise.all([MoviesApi.getMovies(), MainApi.getSavedMovies()]).then(_ref => {\n        let [allMovies, savedMovies] = _ref;\n        console.log(`In MainApi.getSavedMovies: savedMovies: ${savedMovies}`);\n        console.log(`In MainApi.getSavedMovies: savedMovies: ${Array.isArray(savedMovies)}`);\n        setMovies(allMovies);\n\n        if (savedMovies) {\n          setSavedMovies(savedMovies);\n        } else {\n          setSavedMovies([]);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [isLoggedIn]); // Проверяем токен при передвижению по сайту\n  // Перезаписываем отфильтрованные фильмы в переменную состояния\n  // из локального хранилища\n\n  useEffect(() => {\n    tokenCheck();\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Main, {\n            isLoggedIn: isLoggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/movies\",\n          component: Movies,\n          movies: movies,\n          moviesToRender: moviesToRender,\n          searchWord: searchWordLocalStorage,\n          handleSetLike: handleSetLike,\n          handleRemoveLike: handleRemoveLike,\n          onSearch: handleSearchRequest,\n          handleCheckboxToggle: toggleCheckBox,\n          setRender: setRender,\n          isLoggedIn: isLoggedIn,\n          isShortMovieChecked: isShortMovieChecked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/saved-movies\",\n          component: SavedMovies,\n          moviesToRender: moviesToRender,\n          handleRemoveLike: handleRemoveLike,\n          onSearch: handleSearchRequest,\n          handleCheckboxToggle: toggleCheckBox,\n          setRender: setRender,\n          isLoggedIn: isLoggedIn,\n          isShortMovieChecked: isShortMovieChecked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/profile\",\n          component: Profile,\n          onSubmit: handleEditProfileSubmit,\n          onLogOut: handleLogOut,\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            handleRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          children: /*#__PURE__*/_jsxDEV(Page404, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isInfoToolTipOpen,\n        onClose: closePopups,\n        info: infoToolTipInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HfmRftFdp8nTsg3kk9TRVbeeLrk=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Route","Switch","useHistory","useLocation","Main","Movies","SavedMovies","Profile","Login","Register","Page404","InfoTooltip","ProtectedRoute","tooltip","MainApi","MoviesApi","CurrentUserContext","App","history","location","isLoggedIn","setIsLoggedIn","currentUser","setCurrentUser","isInfoToolTipOpen","setIsInfoToolTipOpen","infoToolTipInfo","setInfoToolTipInfo","movies","setMovies","savedMovies","setSavedMovies","moviesToRender","setMoviesToRender","movieSearchResult","setMovieSearchResult","isShortMovieChecked","setIsShortMovieChecked","isLoading","setIsLoading","searchWordLocalStorage","localStorage","getItem","filterStateLocatStorage","handleRegister","name","email","password","register","then","res","ok","push","mesage","registrationSuccess","image","successIcon","message","registrationFail","catch","err","console","log","failIcon","finally","handleLogin","login","data","jwt","Error","setItem","_id","id","tokenCheck","loginSuccess","loginFail","handleEditProfileSubmit","editProfile","updateSuccess","updateFail","handleLogOut","removeItem","closePopups","handleSetLike","movie","createLocalCard","createdMovie","saveFail","handleRemoveLike","deleteLocalMovie","movieId","getSavedMovies","removeFail","toggleCheckBox","getSearchResults","searchResults","JSON","parse","filterBySearchWord","list","word","length","filter","nameRU","toLowerCase","includes","setRender","searchResultLocalStorage","pathname","handleSearchRequest","allFilteredMovies","allSavedMovies","movieList","map","savedMovie","find","savedM","stringify","savedMoviesFromStorage","getContent","user","Promise","all","getMovies","allMovies","Array","isArray"],"sources":["/Users/localmoyashi/dev/movies-explorer-frontend/src/components/App/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\nimport Main from '../Main/Main';\nimport Movies from '../Movies/Movies';\nimport SavedMovies from '../SavedMovies/SavedMovies';\nimport Profile from '../Profile/Profile';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport Page404 from '../Page404/Page404';\nimport InfoTooltip from '../InfoTooltip/InfoTooltip';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport * as tooltip from '../../utils/tooltip';\nimport * as MainApi from '../../utils/MainApi';\nimport * as MoviesApi from '../../utils/MoviesApi';\nimport './App.css';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\n\nfunction App() {\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = useState(false);\n  const [infoToolTipInfo, setInfoToolTipInfo] = useState({});\n  const [movies, setMovies] = useState([]); // Фильмы, полученные от Api\n  const [savedMovies, setSavedMovies] = useState([]); // Фильмы, сохраненные пользователем\n  const [moviesToRender, setMoviesToRender] = useState([]);\n  const [movieSearchResult, setMovieSearchResult] = useState([]);\n  const [isShortMovieChecked, setIsShortMovieChecked] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // ЛОКАЛЬНОЕ ХРАНИЛИЩЕ\n\n  // Фильмы, полученные после фильтрации\n  // const searchResultLocalStorage = JSON.parse(localStorage.getItem('searchResults'));\n  // Текст запроса\n  const searchWordLocalStorage = localStorage.getItem('searchWord');\n  // Состояние переключателя\n  const filterStateLocatStorage = localStorage.getItem('filterState');\n\n  // Обработка регистрации\n\n  function handleRegister (name, email, password) {\n    MainApi.register(email, password, name)\n      .then((res) => {\n        if (res.ok) {\n          history.push('/signin');\n          setInfoToolTipInfo({\n            mesage: tooltip.registrationSuccess,\n            image: tooltip.successIcon\n          });\n        } else {\n          setInfoToolTipInfo({\n            message: tooltip.registrationFail,\n            image: tooltip.successIcon\n          })\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setInfoToolTipInfo({\n          message: tooltip.registrationFail,\n          image: tooltip.failIcon\n        });\n      })\n      .finally(() => {\n        setIsInfoToolTipOpen(true);\n      })\n  }\n  \n  // Обработка логина\n\n  function handleLogin (email, password) {\n    if (!email || !password) {\n      console.log('No email or password on login; aborting.');\n      console.log(`Email: ${email}`);\n      console.log(`Password: ${password}`);\n      return;\n    }\n    \n    MainApi.login(email, password)\n      .then((data) => {\n        if(!data.jwt) {\n          throw new Error('Произошла ошибка (авторизации на фронте)');\n        }\n        localStorage.setItem('jwt', data.jwt);\n        localStorage.setItem('searchResults', []);\n        localStorage.setItem('filterState', false);\n        localStorage.setItem('searchWord', '');\n        return data._id;\n      })\n      .then((id) => {\n        tokenCheck();\n        setCurrentUser({\n          _id: id,\n        });\n        setIsLoggedIn(true);\n        history.push('/movies');\n        setInfoToolTipInfo({\n          message: tooltip.loginSuccess,\n          image: tooltip.successIcon\n        })\n      })\n      .catch((err) => {\n        console.log(err);\n        setInfoToolTipInfo({\n          message: tooltip.loginFail,\n          image: tooltip.failIcon\n        });\n      })\n      .finally(() => {\n        console.log(`Before Popup open: ${isLoggedIn}`)\n        setIsInfoToolTipOpen(true);\n      });\n  }\n\n  // Обработка обновления профиля\n\n  function handleEditProfileSubmit (name, email) {\n    MainApi.editProfile(name, email)\n      .then((data) => {\n        setCurrentUser(data);\n        setInfoToolTipInfo({\n          message: tooltip.updateSuccess,\n          image: tooltip.successIcon\n        })\n      })\n      .catch((err) => {\n        console.log(err);\n        setInfoToolTipInfo({\n          message: tooltip.updateFail,\n          image: tooltip.failIcon\n        })\n      })\n      .finally(() => {\n        setIsInfoToolTipOpen(true)\n      });\n  }\n\n  function handleLogOut () {\n    localStorage.removeItem('jwt');\n    localStorage.removeItem('searcResults');\n    localStorage.removeItem('searchWord');\n    localStorage.removeItem('filterState');\n    setIsLoggedIn(false);\n    history.push('/signin');\n  }\n\n  function closePopups () {\n    setIsInfoToolTipOpen(false);\n  }\n\n  // Добавить фильм в библиотеку сохраненных фильмов\n  // или оповестить юзера об ошибке\n\n  function handleSetLike(movie) {\n\n    console.log(`In HandleSetLike: jwt: ${localStorage.getItem('jwt')}`);\n    console.log(`In HandleSetLike: movie: ${movie}`);\n\n    MainApi.createLocalCard(movie)\n      .then((createdMovie) => {\n        console.log(`Saved movie in handleSetLike: ${createdMovie}`);\n        setSavedMovies([createdMovie, ...savedMovies])\n      })\n      .catch((err) => {\n        console.log(err);\n        setInfoToolTipInfo({\n          message: tooltip.saveFail,\n          image: tooltip.failIcon\n        });\n        setIsInfoToolTipOpen(true);\n      })\n  }\n\n  function handleRemoveLike (movie) {\n    MainApi.deleteLocalMovie(movie.movieId)\n      .then(() => {\n        MainApi.getSavedMovies\n          .then((movies) => {\n            setSavedMovies(movies);\n          })\n          .catch((err) => {\n            console.log(err);\n          })\n      })\n      .catch((err) => {\n        console.log(err);\n        setInfoToolTipInfo({\n          message: tooltip.removeFail,\n          image: tooltip.failIcon\n        });\n        setIsInfoToolTipOpen(true);\n      })\n  }\n\n  function toggleCheckBox() {\n    localStorage.setItem('filterState', !localStorage.getItem('filterState'));\n  }\n\n  // Извлекает и записывает данные с локального хранилища в переменную состояния\n  function getSearchResults() {\n    const searchResults = JSON.parse(localStorage.getItem('searchResuts'));\n    setMovieSearchResult(searchResults === null ? [] : searchResults );\n  }\n\n  // Функция по фильтрации массивов с фильмами по ключевому слову\n  // и длительности\n\n  function filterBySearchWord(list, word) {\n    \n    if (list.length > 0) {\n      return list.filter((movie) => movie.nameRU.toLowerCase().includes(word.toLowerCase()));\n    } else {\n      return [];\n    }\n  }\n\n  function setRender() {\n    const searchResultLocalStorage = localStorage.getItem('searchResults');\n    if (location.pathname === '/movies') {\n      if(searchResultLocalStorage.length === 0 || searchResultLocalStorage === null) {\n        setMoviesToRender([]);\n      } else {\n        setMoviesToRender(JSON.parse(localStorage.getItem('searchResults')))\n      }\n    } else if (location.pathname === '/saved-movies') {\n      if (savedMovies.length === 0 || savedMovies === null) {\n        setMoviesToRender([]);\n      } else {\n        setMoviesToRender(savedMovies);\n      }\n    }\n  }\n\n  // При отображении фильмов в блоке результатов\n  // фильмы, ранее сохраненные пользователем берутся с сервера\n  // (так как только на них будет ярлык сохраненных));\n\n  function handleSearchRequest(word) {\n    // Проверяем все фильмы\n    // Проверяем сохраненные фильмы\n\n    const allFilteredMovies = filterBySearchWord(movies, word);\n    const allSavedMovies = filterBySearchWord(savedMovies, word);\n\n    // Сравниваем два массива,\n    // повторяющиеся фильмы берем с серверной стороны\n    const movieList = allFilteredMovies.map((movie) => {\n      const savedMovie = allSavedMovies.find((savedM) => savedM.movieId === movie.id);\n      return savedMovie ?? movie;\n    })\n\n    // Если результатов нет - записываем в переменную пустой массив\n    if(movieList !== null && movieList.length !== 0) {\n      localStorage.setItem('searchResults', JSON.stringify(movieList));\n      getSearchResults();\n      console.log(`handleSearchRequest: local storage is not empty!`);\n    } else {\n      localStorage.setItem('searchResults', []);\n      getSearchResults();\n    }\n    setRender();\n  }\n\n  // Проверяем наличие токена в локальном хранилище\n  // если токен присутствует - \n  // меняем состояние логина и\n  // забираем данные о юзере с сервера и сохранем в переменную состояния. \n\n  function tokenCheck () {\n    const jwt = localStorage.getItem('jwt');\n    const savedMoviesFromStorage = (localStorage.getItem('searchResults') !== null && isLoggedIn) ?\n      JSON.parse(localStorage.getItem('searchResults')) :\n      [];\n\n    console.log(`Token in tokenCheck: ${jwt}`);\n    console.log(`Token in tokenCheck: idLoggedIn ${isLoggedIn}`);\n    console.log(`22222 In getSearchResults: ${movieSearchResult}`);\n\n    if (jwt) {\n      MainApi.getContent(jwt)\n        .then((user) => {\n          if (user) {\n            setIsLoggedIn(true);\n            setCurrentUser(user);\n            setMovieSearchResult(savedMoviesFromStorage);\n            location.pathname === '/signin' ? \n              history.push('/movies') :\n              history.push(location.pathname);\n            console.log(`Token in tokenCheck: idLoggedIn ${isLoggedIn}`);\n\n            console.log(`In tokenCheck: getContent currentUSer: ${currentUser}`);\n            console.log(`In tokenCheck: getContent response: ${JSON.stringify(user)}`);\n          } else {\n            localStorage.removeItem('jwt');\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          localStorage.removeItem('jwt');\n        })\n    }\n  }\n\n  // Если пользователь залогинен\n  // получаем все фильмы с API и сохраненные юзером фильмы\n\n  useEffect(() => {\n    console.log(`Fetching movies...`);\n\n    if(isLoggedIn) {\n      Promise.all([\n        MoviesApi.getMovies(),\n        MainApi.getSavedMovies()\n      ])\n      .then(([allMovies, savedMovies]) => {\n        console.log(`In MainApi.getSavedMovies: savedMovies: ${savedMovies}`);\n        console.log(`In MainApi.getSavedMovies: savedMovies: ${Array.isArray(savedMovies)}`);\n        setMovies(allMovies);\n        if (savedMovies) {\n          setSavedMovies(savedMovies);\n        } else {\n          setSavedMovies([]);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n    }    \n  }, [isLoggedIn])\n\n  // Проверяем токен при передвижению по сайту\n  // Перезаписываем отфильтрованные фильмы в переменную состояния\n  // из локального хранилища\n  useEffect(() => {\n    tokenCheck();\n  }, [history]);\n\n  \n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"app\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Main\n              isLoggedIn={isLoggedIn} />\n          </Route>\n\n          <ProtectedRoute\n            path=\"/movies\"\n            component={Movies}\n            movies={movies}\n            moviesToRender={moviesToRender}\n            searchWord={searchWordLocalStorage}\n            handleSetLike={handleSetLike}\n            handleRemoveLike={handleRemoveLike}\n            onSearch={handleSearchRequest}\n            handleCheckboxToggle={toggleCheckBox}\n            setRender={setRender}\n            isLoggedIn={isLoggedIn}\n            isShortMovieChecked={isShortMovieChecked} />\n\n          <ProtectedRoute\n            path=\"/saved-movies\"\n            component={SavedMovies}\n            moviesToRender={moviesToRender}\n            handleRemoveLike={handleRemoveLike}\n            onSearch={handleSearchRequest}\n            handleCheckboxToggle={toggleCheckBox}\n            setRender={setRender}\n            isLoggedIn={isLoggedIn}\n            isShortMovieChecked={isShortMovieChecked} />\n\n          <ProtectedRoute\n            path=\"/profile\"\n            component={Profile}\n            onSubmit={handleEditProfileSubmit}\n            onLogOut={handleLogOut}\n            isLoggedIn={isLoggedIn} />\n\n          <Route path=\"/signin\">\n            <Login\n              handleLogin={handleLogin} />\n          </Route>\n\n          <Route path=\"/signup\">\n            <Register\n              handleRegister={handleRegister} />\n          </Route>\n\n          <Route path=\"*\">\n            <Page404 />\n          </Route>\n        </Switch>\n\n        <InfoTooltip\n          isOpen={isInfoToolTipOpen}\n          onClose={closePopups}\n          info={infoToolTipInfo} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}