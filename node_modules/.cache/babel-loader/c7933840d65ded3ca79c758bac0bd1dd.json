{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nexport function useFormWithValidation() {\n  _s();\n\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isValid, setIsValid] = useState(false);\n\n  const handleChange = event => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    setValues({ ...values,\n      [name]: value\n    });\n    setErrors({ ...errors,\n      [name]: target.validationMessage\n    });\n    setIsValid(target.closest(\"form\").checkValidity());\n  };\n\n  const resetForm = useCallback(function () {\n    let newValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let newErrors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let newIsValid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    setValues(newValues);\n    setErrors(newErrors);\n    setIsValid(newIsValid);\n  }, [setValues, setErrors, setIsValid]);\n  return {\n    values,\n    handleChange,\n    errors,\n    isValid,\n    resetForm\n  };\n}\n\n_s(useFormWithValidation, \"msMIfc7pG71dSFDSlZa7+l3GN6k=\");","map":{"version":3,"names":["useState","useCallback","useFormWithValidation","values","setValues","errors","setErrors","isValid","setIsValid","handleChange","event","target","name","value","validationMessage","closest","checkValidity","resetForm","newValues","newErrors","newIsValid"],"sources":["/Users/localmoyashi/dev/movies-explorer-frontend/src/utils/validation.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\nexport function useFormWithValidation() {\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isValid, setIsValid] = useState(false);\n\n  const handleChange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    setValues({...values, [name]: value});\n    setErrors({...errors, [name]: target.validationMessage });\n    setIsValid(target.closest(\"form\").checkValidity());\n  };\n\n  const resetForm = useCallback(\n    (newValues = {}, newErrors = {}, newIsValid = false) => {\n      setValues(newValues);\n      setErrors(newErrors);\n      setIsValid(newIsValid);\n    },\n    [setValues, setErrors, setIsValid]\n  );\n\n  return { values, handleChange, errors, isValid, resetForm };\n}"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA,OAAO,SAASC,qBAAT,GAAiC;EAAA;;EACtC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;;EAEA,MAAMS,YAAY,GAAIC,KAAD,IAAW;IAC9B,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;IACA,MAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;IACA,MAAMC,KAAK,GAAGF,MAAM,CAACE,KAArB;IACAT,SAAS,CAAC,EAAC,GAAGD,MAAJ;MAAY,CAACS,IAAD,GAAQC;IAApB,CAAD,CAAT;IACAP,SAAS,CAAC,EAAC,GAAGD,MAAJ;MAAY,CAACO,IAAD,GAAQD,MAAM,CAACG;IAA3B,CAAD,CAAT;IACAN,UAAU,CAACG,MAAM,CAACI,OAAP,CAAe,MAAf,EAAuBC,aAAvB,EAAD,CAAV;EACD,CAPD;;EASA,MAAMC,SAAS,GAAGhB,WAAW,CAC3B,YAAwD;IAAA,IAAvDiB,SAAuD,uEAA3C,EAA2C;IAAA,IAAvCC,SAAuC,uEAA3B,EAA2B;IAAA,IAAvBC,UAAuB,uEAAV,KAAU;IACtDhB,SAAS,CAACc,SAAD,CAAT;IACAZ,SAAS,CAACa,SAAD,CAAT;IACAX,UAAU,CAACY,UAAD,CAAV;EACD,CAL0B,EAM3B,CAAChB,SAAD,EAAYE,SAAZ,EAAuBE,UAAvB,CAN2B,CAA7B;EASA,OAAO;IAAEL,MAAF;IAAUM,YAAV;IAAwBJ,MAAxB;IAAgCE,OAAhC;IAAyCU;EAAzC,CAAP;AACD;;GAxBef,qB"},"metadata":{},"sourceType":"module"}