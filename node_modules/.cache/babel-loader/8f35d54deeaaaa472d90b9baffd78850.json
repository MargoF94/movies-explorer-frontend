{"ast":null,"code":"var _jsxFileName = \"/Users/localmoyashi/dev/movies-explorer-frontend/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\nimport Main from '../Main/Main';\nimport Movies from '../Movies/Movies';\nimport SavedMovies from '../SavedMovies/SavedMovies';\nimport Profile from '../Profile/Profile';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport Page404 from '../Page404/Page404';\nimport InfoTooltip from '../InfoTooltip/InfoTooltip';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport * as tooltip from '../../utils/tooltip';\nimport * as MainApi from '../../utils/MainApi';\nimport * as MoviesApi from '../../utils/MoviesApi';\nimport './App.css';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = useState(false);\n  const [infoToolTipInfo, setInfoToolTipInfo] = useState({});\n  const [movies, setMovies] = useState([]); // Фильмы, полученные от Api\n\n  const [savedMovies, setSavedMovies] = useState([]); // Фильмы, сохраненные пользователем\n\n  const [movieSearchResult, setMovieSearchResult] = useState([]);\n  const [isLoading, setIsLoading] = useState(false); // ЛОКАЛЬНОЕ ХРАНИЛИЩЕ\n  // Фильмы, полученные после фильтрации\n  // const searchResultLocalStorage = JSON.parse(localStorage.getItem('searchResults'));\n  // Текст запроса\n\n  const searchWordLocalStorage = localStorage.getItem('searchWord'); // Состояние переключателя\n\n  const filterStateLocatStorage = localStorage.getItem('filterState'); // Обработка регистрации\n\n  function handleRegister(name, email, password) {\n    MainApi.register(email, password, name).then(res => {\n      if (res.ok) {\n        history.push('/signin');\n        setInfoToolTipInfo({\n          mesage: tooltip.registrationSuccess,\n          image: tooltip.successIcon\n        });\n      } else {\n        setInfoToolTipInfo({\n          message: tooltip.registrationFail,\n          image: tooltip.successIcon\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n      setInfoToolTipInfo({\n        message: tooltip.registrationFail,\n        image: tooltip.failIcon\n      });\n    }).finally(() => {\n      setIsInfoToolTipOpen(true);\n    });\n  } // Обработка логина\n\n\n  function handleLogin(email, password) {\n    if (!email || !password) {\n      console.log('No email or password on login; aborting.');\n      return;\n    }\n\n    MainApi.login(email, password).then(data => {\n      if (!data.jwt) {\n        throw new Error('Произошла ошибка (авторизации на фронте)');\n      }\n\n      localStorage.setItem('jwt', data.jwt);\n      localStorage.setItem('searchResults', []);\n      return data._id;\n    }).then(id => {\n      tokenCheck();\n      setCurrentUser({\n        _id: id\n      });\n      setIsLoggedIn(true);\n      history.push('/movies');\n      setInfoToolTipInfo({\n        message: tooltip.loginSuccess,\n        image: tooltip.successIcon\n      });\n      console.log(`33333 In getSearchResults: ${localStorage.getItem('searchResults')}`);\n    }).catch(err => {\n      console.log(err);\n      setInfoToolTipInfo({\n        message: tooltip.loginFail,\n        image: tooltip.failIcon\n      });\n    }).finally(() => {\n      console.log(`Before Popup open: ${isLoggedIn}`);\n      setIsInfoToolTipOpen(true);\n    });\n  } // Обработка обновления профиля\n\n\n  function handleEditProfileSubmit(name, email) {\n    MainApi.editProfile(name, email).then(data => {\n      setCurrentUser(data);\n      setInfoToolTipInfo({\n        message: tooltip.updateSuccess,\n        image: tooltip.successIcon\n      });\n    }).catch(err => {\n      console.log(err);\n      setInfoToolTipInfo({\n        message: tooltip.updateFail,\n        image: tooltip.failIcon\n      });\n    }).finally(() => {\n      setIsInfoToolTipOpen(true);\n    });\n  }\n\n  function handleLogOut() {\n    localStorage.removeItem('jwt');\n    localStorage.removeItem('searcResults');\n    setIsLoggedIn(false);\n    history.push('/signin');\n  }\n\n  function closePopups() {\n    setIsInfoToolTipOpen(false);\n  } // Добавить фильм в библиотеку сохраненных фильмов\n  // или оповестить юзера об ошибке\n\n\n  function handleSetLike(movie) {\n    console.log(`In HandleSetLike: jwt: ${localStorage.getItem('jwt')}`);\n    console.log(`In HandleSetLike: movie: ${movie}`);\n    MainApi.createLocalCard(movie).then(createdMovie => {\n      console.log(`Saved movie in handleSetLike: ${createdMovie}`);\n      setSavedMovies([createdMovie, ...savedMovies]);\n    }).catch(err => {\n      console.log(err);\n      setInfoToolTipInfo({\n        message: tooltip.saveFail,\n        image: tooltip.failIcon\n      });\n      setIsInfoToolTipOpen(true);\n    });\n  }\n\n  function handleRemoveLike(movie) {\n    MainApi.deleteLocalMovie(movie.movieId).then(() => {\n      MainApi.getSavedMovies.then(movies => {\n        setSavedMovies(movies);\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {\n      console.log(err);\n      setInfoToolTipInfo({\n        message: tooltip.removeFail,\n        image: tooltip.failIcon\n      });\n      setIsInfoToolTipOpen(true);\n    });\n  } // Извлекает и записывает данные с локального хранилища в переменную состояния\n\n\n  function getSearchResults() {\n    const searchResults = JSON.parse(localStorage.getItem('searchResuts'));\n    setMovieSearchResult(searchResults === null ? [] : searchResults);\n  } // Функция по фильтрации массивов с фильмами по ключевому слову\n\n\n  function filterBySearchWord(list, word) {\n    // const array = list;\n    // console.log(`In filterBySearchWord: parsed array: ${array}`);\n    if (list.length > 0) {\n      return list.filter(movie => movie.nameRU.toLowerCase().includes(word.toLowerCase()));\n    } else {\n      return [];\n    }\n  } // При отображении фильмов в блоке результатов\n  // фильмы, ранее сохраненные пользователем берутся с сервера\n  // (так как только на них будет ярлык сохраненных));\n\n\n  function handleSearchRequest(word) {\n    // Проверяем все фильмы\n    // Проверяем сохраненные фильмы\n    console.log(`In handleSearchRequest: movies: ${movies}`);\n    console.log(`In handleSearchRequest: savedMovies: ${savedMovies}`);\n    const allFilteredMovies = filterBySearchWord(movies, word);\n    const allSavedMovies = filterBySearchWord(savedMovies, word);\n    console.log(`In handleSearchRequest: allFilteredMovies: ${allFilteredMovies}`);\n    console.log(`In handleSearchRequest: allSavedMovies: ${allSavedMovies}`); // Сравниваем два массива,\n    // повторяющиеся фильмы берем с серверной стороны\n\n    const movieList = allFilteredMovies.map(movie => {\n      const savedMovie = allSavedMovies.find(savedM => savedM.movieId === movie.id);\n      return savedMovie !== null && savedMovie !== void 0 ? savedMovie : movie;\n    });\n\n    if (movieList) {\n      console.log(`In handleSearchRequest: movieList: ${movieList}`);\n      console.log(`In handleSearchRequest: movieList is array: ${Array.isArray(movieList)}`);\n    } // Если результатов нет - записываем в переменную пустой массив\n\n\n    if (movieList !== null && movieList.length !== 0) {\n      localStorage.setItem('searchResults', JSON.stringify(movieList));\n      getSearchResults();\n      console.log(`handleSearchRequest: local storage is not empty!`);\n    } else {\n      localStorage.setItem('searchResults', []);\n      getSearchResults();\n    }\n\n    console.log(`handleSearchRequest: searchresult in local storage: ${localStorage.getItem('searchResults')}`);\n    console.log(`handleSearchRequest: movieSearchResult: ${movieSearchResult}`);\n  } // Проверяем наличие токена в локальном хранилище\n  // если токен присутствует - \n  // меняем состояние логина и\n  // забираем данные о юзере с сервера и сохранем в переменную состояния. \n\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n    const savedMoviesFromStorage = localStorage.getItem('searchResults') !== null && isLoggedIn ? JSON.parse(localStorage.getItem('searchResults')) : [];\n    console.log(`Token in tokenCheck: ${jwt}`);\n    console.log(`Token in tokenCheck: ${isLoggedIn}`);\n    console.log(`22222 In getSearchResults: ${movieSearchResult}`);\n\n    if (jwt) {\n      MainApi.getContent(jwt).then(user => {\n        if (user) {\n          setIsLoggedIn(true);\n          setCurrentUser(user);\n          setMovieSearchResult(savedMoviesFromStorage);\n          location.pathname === '/signin' && history.push('/movies');\n          console.log(`Token in tokenCheck: idLoggedIn ${isLoggedIn}`);\n          console.log(`In tokenCheck: getContent currentUSer: ${currentUser}`);\n          console.log(`In tokenCheck: getContent response: ${JSON.stringify(user)}`);\n        } else {\n          localStorage.removeItem('jwt');\n          setIsLoggedIn(false);\n        }\n      }).catch(err => {\n        console.log(`Token in tokenCheck: ${jwt}`);\n        localStorage.removeItem('jwt');\n      });\n    }\n  } // Если пользователь залогинен\n  // получаем все фильмы с API и сохраненные юзером фильмы\n\n\n  useEffect(() => {\n    console.log(`Fetching movies...`);\n\n    if (isLoggedIn) {\n      Promise.all([MoviesApi.getMovies(), MainApi.getSavedMovies()]).then(_ref => {\n        let [allMovies, savedMovies] = _ref;\n        setMovies(allMovies);\n\n        if (savedMovies) {\n          setSavedMovies(savedMovies);\n        } else {\n          setSavedMovies([]);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [isLoggedIn]); // Проверяем токен при передвижению по сайту\n  // Перезаписываем отфильтрованные фильмы в переменную состояния\n  // из локального хранилища\n\n  useEffect(() => {\n    tokenCheck();\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Main, {\n            isLoggedIn: isLoggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/movies\",\n          component: Movies,\n          movies: movies,\n          movieSearchResult: movieSearchResult,\n          searchWord: searchWordLocalStorage,\n          handleSetLike: handleSetLike,\n          handleRemoveLike: handleRemoveLike,\n          onSearch: handleSearchRequest,\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/saved-movies\",\n          component: SavedMovies,\n          savedMovies: savedMovies,\n          handleRemoveLike: handleRemoveLike,\n          onSearch: handleSearchRequest,\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/profile\",\n          component: Profile,\n          onSubmit: handleEditProfileSubmit,\n          onLogOut: handleLogOut,\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            handleRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          children: /*#__PURE__*/_jsxDEV(Page404, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isInfoToolTipOpen,\n        onClose: closePopups,\n        info: infoToolTipInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Q9G6bE0AKa+iaLCBwGyx15Auzc0=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Route","Switch","useHistory","useLocation","Main","Movies","SavedMovies","Profile","Login","Register","Page404","InfoTooltip","ProtectedRoute","tooltip","MainApi","MoviesApi","CurrentUserContext","App","history","location","isLoggedIn","setIsLoggedIn","currentUser","setCurrentUser","isInfoToolTipOpen","setIsInfoToolTipOpen","infoToolTipInfo","setInfoToolTipInfo","movies","setMovies","savedMovies","setSavedMovies","movieSearchResult","setMovieSearchResult","isLoading","setIsLoading","searchWordLocalStorage","localStorage","getItem","filterStateLocatStorage","handleRegister","name","email","password","register","then","res","ok","push","mesage","registrationSuccess","image","successIcon","message","registrationFail","catch","err","console","log","failIcon","finally","handleLogin","login","data","jwt","Error","setItem","_id","id","tokenCheck","loginSuccess","loginFail","handleEditProfileSubmit","editProfile","updateSuccess","updateFail","handleLogOut","removeItem","closePopups","handleSetLike","movie","createLocalCard","createdMovie","saveFail","handleRemoveLike","deleteLocalMovie","movieId","getSavedMovies","removeFail","getSearchResults","searchResults","JSON","parse","filterBySearchWord","list","word","length","filter","nameRU","toLowerCase","includes","handleSearchRequest","allFilteredMovies","allSavedMovies","movieList","map","savedMovie","find","savedM","Array","isArray","stringify","savedMoviesFromStorage","getContent","user","pathname","Promise","all","getMovies","allMovies"],"sources":["/Users/localmoyashi/dev/movies-explorer-frontend/src/components/App/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\nimport Main from '../Main/Main';\nimport Movies from '../Movies/Movies';\nimport SavedMovies from '../SavedMovies/SavedMovies';\nimport Profile from '../Profile/Profile';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport Page404 from '../Page404/Page404';\nimport InfoTooltip from '../InfoTooltip/InfoTooltip';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport * as tooltip from '../../utils/tooltip';\nimport * as MainApi from '../../utils/MainApi';\nimport * as MoviesApi from '../../utils/MoviesApi';\nimport './App.css';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\n\nfunction App() {\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = useState(false);\n  const [infoToolTipInfo, setInfoToolTipInfo] = useState({});\n  const [movies, setMovies] = useState([]); // Фильмы, полученные от Api\n  const [savedMovies, setSavedMovies] = useState([]); // Фильмы, сохраненные пользователем\n  const [movieSearchResult, setMovieSearchResult] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // ЛОКАЛЬНОЕ ХРАНИЛИЩЕ\n\n  // Фильмы, полученные после фильтрации\n  // const searchResultLocalStorage = JSON.parse(localStorage.getItem('searchResults'));\n  // Текст запроса\n  const searchWordLocalStorage = localStorage.getItem('searchWord');\n  // Состояние переключателя\n  const filterStateLocatStorage = localStorage.getItem('filterState');\n\n  // Обработка регистрации\n\n  function handleRegister (name, email, password) {\n    MainApi.register(email, password, name)\n      .then((res) => {\n        if (res.ok) {\n          history.push('/signin');\n          setInfoToolTipInfo({\n            mesage: tooltip.registrationSuccess,\n            image: tooltip.successIcon\n          });\n        } else {\n          setInfoToolTipInfo({\n            message: tooltip.registrationFail,\n            image: tooltip.successIcon\n          })\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setInfoToolTipInfo({\n          message: tooltip.registrationFail,\n          image: tooltip.failIcon\n        });\n      })\n      .finally(() => {\n        setIsInfoToolTipOpen(true);\n      })\n  }\n  \n  // Обработка логина\n\n  function handleLogin (email, password) {\n    if (!email || !password) {\n      console.log('No email or password on login; aborting.');\n      return;\n    }\n    \n    MainApi.login(email, password)\n      .then((data) => {\n        if(!data.jwt) {\n          throw new Error('Произошла ошибка (авторизации на фронте)');\n        }\n        localStorage.setItem('jwt', data.jwt);\n        localStorage.setItem('searchResults', []);\n        return data._id;\n      })\n      .then((id) => {\n        tokenCheck();\n        setCurrentUser({\n          _id: id,\n        });\n        setIsLoggedIn(true);\n        history.push('/movies');\n        setInfoToolTipInfo({\n          message: tooltip.loginSuccess,\n          image: tooltip.successIcon\n        })\n        console.log(`33333 In getSearchResults: ${localStorage.getItem('searchResults')}`);\n      })\n      .catch((err) => {\n        console.log(err);\n        setInfoToolTipInfo({\n          message: tooltip.loginFail,\n          image: tooltip.failIcon\n        });\n      })\n      .finally(() => {\n        console.log(`Before Popup open: ${isLoggedIn}`)\n        setIsInfoToolTipOpen(true);\n      });\n  }\n\n  // Обработка обновления профиля\n\n  function handleEditProfileSubmit (name, email) {\n    MainApi.editProfile(name, email)\n      .then((data) => {\n        setCurrentUser(data);\n        setInfoToolTipInfo({\n          message: tooltip.updateSuccess,\n          image: tooltip.successIcon\n        })\n      })\n      .catch((err) => {\n        console.log(err);\n        setInfoToolTipInfo({\n          message: tooltip.updateFail,\n          image: tooltip.failIcon\n        })\n      })\n      .finally(() => {\n        setIsInfoToolTipOpen(true)\n      });\n  }\n\n  function handleLogOut () {\n    localStorage.removeItem('jwt');\n    localStorage.removeItem('searcResults');\n    setIsLoggedIn(false);\n    history.push('/signin');\n  }\n\n  function closePopups () {\n    setIsInfoToolTipOpen(false);\n  }\n\n  // Добавить фильм в библиотеку сохраненных фильмов\n  // или оповестить юзера об ошибке\n\n  function handleSetLike(movie) {\n\n    console.log(`In HandleSetLike: jwt: ${localStorage.getItem('jwt')}`);\n    console.log(`In HandleSetLike: movie: ${movie}`);\n\n    MainApi.createLocalCard(movie)\n      .then((createdMovie) => {\n        console.log(`Saved movie in handleSetLike: ${createdMovie}`);\n        setSavedMovies([createdMovie, ...savedMovies])\n      })\n      .catch((err) => {\n        console.log(err);\n        setInfoToolTipInfo({\n          message: tooltip.saveFail,\n          image: tooltip.failIcon\n        });\n        setIsInfoToolTipOpen(true);\n      })\n  }\n\n  function handleRemoveLike (movie) {\n    MainApi.deleteLocalMovie(movie.movieId)\n      .then(() => {\n        MainApi.getSavedMovies\n          .then((movies) => {\n            setSavedMovies(movies);\n          })\n          .catch((err) => {\n            console.log(err);\n          })\n      })\n      .catch((err) => {\n        console.log(err);\n        setInfoToolTipInfo({\n          message: tooltip.removeFail,\n          image: tooltip.failIcon\n        });\n        setIsInfoToolTipOpen(true);\n      })\n  }\n\n  // Извлекает и записывает данные с локального хранилища в переменную состояния\n  function getSearchResults() {\n    const searchResults = JSON.parse(localStorage.getItem('searchResuts'));\n    setMovieSearchResult(searchResults === null ? [] : searchResults );\n  }\n\n  // Функция по фильтрации массивов с фильмами по ключевому слову\n\n  function filterBySearchWord(list, word) {\n    // const array = list;\n    // console.log(`In filterBySearchWord: parsed array: ${array}`);\n    \n    if (list.length > 0) {\n      return list.filter((movie) => movie.nameRU.toLowerCase().includes(word.toLowerCase()));\n    } else {\n      return [];\n    }\n  }\n\n  // При отображении фильмов в блоке результатов\n  // фильмы, ранее сохраненные пользователем берутся с сервера\n  // (так как только на них будет ярлык сохраненных));\n\n  function handleSearchRequest(word) {\n    // Проверяем все фильмы\n    // Проверяем сохраненные фильмы\n\n    console.log(`In handleSearchRequest: movies: ${movies}`);\n    console.log(`In handleSearchRequest: savedMovies: ${savedMovies}`);\n\n    const allFilteredMovies = filterBySearchWord(movies, word);\n    const allSavedMovies = filterBySearchWord(savedMovies, word);\n\n    console.log(`In handleSearchRequest: allFilteredMovies: ${allFilteredMovies}`);\n    console.log(`In handleSearchRequest: allSavedMovies: ${allSavedMovies}`);\n\n    // Сравниваем два массива,\n    // повторяющиеся фильмы берем с серверной стороны\n    const movieList = allFilteredMovies.map((movie) => {\n      const savedMovie = allSavedMovies.find((savedM) => savedM.movieId === movie.id);\n      return savedMovie ?? movie;\n    })\n\n    if(movieList) {\n      console.log(`In handleSearchRequest: movieList: ${movieList}`);\n      console.log(`In handleSearchRequest: movieList is array: ${Array.isArray(movieList)}`);\n    }\n\n    // Если результатов нет - записываем в переменную пустой массив\n    if(movieList !== null && movieList.length !== 0) {\n      localStorage.setItem('searchResults', JSON.stringify(movieList));\n      getSearchResults();\n      console.log(`handleSearchRequest: local storage is not empty!`);\n    } else {\n      localStorage.setItem('searchResults', []);\n      getSearchResults();\n    }\n\n    \n    \n    console.log(`handleSearchRequest: searchresult in local storage: ${localStorage.getItem('searchResults')}`);\n    console.log(`handleSearchRequest: movieSearchResult: ${movieSearchResult}`);\n  }\n\n  // Проверяем наличие токена в локальном хранилище\n  // если токен присутствует - \n  // меняем состояние логина и\n  // забираем данные о юзере с сервера и сохранем в переменную состояния. \n\n  function tokenCheck () {\n    const jwt = localStorage.getItem('jwt');\n    const savedMoviesFromStorage = (localStorage.getItem('searchResults') !== null && isLoggedIn) ?\n      JSON.parse(localStorage.getItem('searchResults')) :\n      [];\n\n    console.log(`Token in tokenCheck: ${jwt}`);\n    console.log(`Token in tokenCheck: ${isLoggedIn}`);\n    console.log(`22222 In getSearchResults: ${movieSearchResult}`);\n\n    if (jwt) {\n      MainApi.getContent(jwt)\n        .then((user) => {\n          if (user) {\n            setIsLoggedIn(true);\n            setCurrentUser(user);\n            setMovieSearchResult(savedMoviesFromStorage);\n            location.pathname === '/signin' && history.push('/movies');\n            console.log(`Token in tokenCheck: idLoggedIn ${isLoggedIn}`);\n\n            console.log(`In tokenCheck: getContent currentUSer: ${currentUser}`);\n            console.log(`In tokenCheck: getContent response: ${JSON.stringify(user)}`);\n          } else {\n            localStorage.removeItem('jwt');\n            setIsLoggedIn(false);\n          }\n        })\n        .catch((err) => {\n          console.log(`Token in tokenCheck: ${jwt}`);\n          localStorage.removeItem('jwt');\n        })\n    }\n  }\n\n  // Если пользователь залогинен\n  // получаем все фильмы с API и сохраненные юзером фильмы\n\n  useEffect(() => {\n    console.log(`Fetching movies...`);\n\n    if(isLoggedIn) {\n      Promise.all([\n        MoviesApi.getMovies(),\n        MainApi.getSavedMovies()\n      ])\n      .then(([allMovies, savedMovies]) => {\n        setMovies(allMovies);\n        if (savedMovies) {\n          setSavedMovies(savedMovies);\n        } else {\n          setSavedMovies([]);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n    }    \n  }, [isLoggedIn])\n\n  // Проверяем токен при передвижению по сайту\n  // Перезаписываем отфильтрованные фильмы в переменную состояния\n  // из локального хранилища\n  useEffect(() => {\n    tokenCheck();\n  }, [history]);\n\n  \n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"app\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Main\n              isLoggedIn={isLoggedIn} />\n          </Route>\n\n          <ProtectedRoute\n            path=\"/movies\"\n            component={Movies}\n            movies={movies}\n            movieSearchResult={movieSearchResult}\n            searchWord={searchWordLocalStorage}\n            handleSetLike={handleSetLike}\n            handleRemoveLike={handleRemoveLike}\n            onSearch={handleSearchRequest}\n            isLoggedIn={isLoggedIn} />\n\n          <ProtectedRoute\n            path=\"/saved-movies\"\n            component={SavedMovies}\n            savedMovies={savedMovies}\n            handleRemoveLike={handleRemoveLike}\n            onSearch={handleSearchRequest}\n            isLoggedIn={isLoggedIn} />\n\n          <ProtectedRoute\n            path=\"/profile\"\n            component={Profile}\n            onSubmit={handleEditProfileSubmit}\n            onLogOut={handleLogOut}\n            isLoggedIn={isLoggedIn} />\n\n          <Route path=\"/signin\">\n            <Login\n              handleLogin={handleLogin} />\n          </Route>\n\n          <Route path=\"/signup\">\n            <Register\n              handleRegister={handleRegister} />\n          </Route>\n\n          <Route path=\"*\">\n            <Page404 />\n          </Route>\n        </Switch>\n\n        <InfoTooltip\n          isOpen={isInfoToolTipOpen}\n          onClose={closePopups}\n          info={infoToolTipInfo} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}