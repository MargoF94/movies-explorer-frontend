{"ast":null,"code":"export const mainApiUrl = 'http://localhost:3000';\n\nconst checkResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject(`Ошибка ${res.status}`);\n}; //// ПОЛЬЗОВАТЕЛЬСКОЕ ////\n// Логинl\n\n\nexport const login = (email, password) => {\n  return fetch(`${mainApiUrl}/api/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(data => {\n    if (data) {\n      console.log(`Response data from api after successful login: ${data}`);\n      localStorage.setItem('jwt', data.jwt);\n      return data.json();\n    }\n  });\n}; // Регистрация\n\nexport const register = (email, password, name) => {\n  return fetch(`${mainApiUrl}/api/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password,\n      name\n    })\n  });\n}; // Проверка токена\n// Получение информации о пользователе\n\nexport const getContent = jwt => {\n  return fetch(`${mainApiUrl}/api/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${jwt}`\n    }\n  }).then(res => {\n    console.log(`In auth.getContent: response: ${res.json()}`);\n    return res.json();\n  });\n}; // Изменение информации о пользователе\n\nexport const editProfile = (name, email) => {\n  return fetch(`${mainApiUrl}/users/me`, {\n    method: 'PATCH',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `${localStorage.getItem('jwt')}`\n    },\n    body: JSON.stringify({\n      name: name,\n      email: email\n    })\n  }).then(checkResponse);\n}; //// КАРТОЧКИ ////\n// Создание фильма\n// Сохраняем пришедший с API фильм локально\n\nexport const createLocalCard = movie => {\n  return fetch(`${mainApiUrl}/movies`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `${localStorage.getItem('jwt')}`\n    },\n    body: {\n      country: movie.country,\n      director: movie.director,\n      duration: movie.duration,\n      year: movie.year,\n      description: movie.description,\n      image: `https://api.nomoreparties.co/beatfilm-movies${movie.image.mainApiUrl}`,\n      trailerLink: movie.trailerLink,\n      nameRU: movie.nameRU,\n      nameEN: movie.nameEN,\n      thumbnail: `https://api.nomoreparties.co/beatfilm-movies${movie.image.formats.thumbnail.url}`,\n      movieId: movie.id\n    }\n  }).then(checkResponse);\n}; // Снятие лайка\n\nexport const deleteLocalMovie = movieId => {\n  return fetch(`${mainApiUrl}/movies/movieId`, {\n    method: 'DELETE',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `${localStorage.getItem('jwt')}`\n    }\n  }).then(checkResponse);\n}; // Получение сохраненных карточек\n\nexport const getSavedMovies = () => {\n  return fetch(`${mainApiUrl}/movies`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `${localStorage.getItem('jwt')}`\n    }\n  }).then(checkResponse);\n};","map":{"version":3,"names":["mainApiUrl","checkResponse","res","ok","json","Promise","reject","status","login","email","password","fetch","method","headers","body","JSON","stringify","then","data","console","log","localStorage","setItem","jwt","register","name","getContent","editProfile","getItem","createLocalCard","movie","country","director","duration","year","description","image","trailerLink","nameRU","nameEN","thumbnail","formats","url","movieId","id","deleteLocalMovie","getSavedMovies"],"sources":["/Users/localmoyashi/dev/movies-explorer-frontend/src/utils/MainApi.js"],"sourcesContent":["export const mainApiUrl = 'http://localhost:3000';\n\nconst checkResponse = (res) => {\n  if (res.ok) {\n    return res.json()\n  }\n  return Promise.reject(`Ошибка ${res.status}`);\n}\n\n//// ПОЛЬЗОВАТЕЛЬСКОЕ ////\n\n// Логинl\n\nexport const login = (email, password) => {\n  return fetch(`${mainApiUrl}/api/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email, password })\n  })\n  .then((data) => {\n    if (data) {\n      console.log(`Response data from api after successful login: ${data}`);\n      localStorage.setItem('jwt', data.jwt);\n      return data.json();\n    }\n  })\n}\n\n// Регистрация\n\nexport const register = ( email, password, name ) => {\n  return fetch(`${mainApiUrl}/api/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({email, password, name})\n  })\n}\n\n  // Проверка токена\n  // Получение информации о пользователе\n\nexport const getContent = (jwt) => {\n  return fetch(`${mainApiUrl}/api/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${jwt}`,\n    },\n  })\n  .then((res) => {\n    console.log(`In auth.getContent: response: ${res.json()}`);\n    return res.json();\n  })\n}\n\n\n// Изменение информации о пользователе\n\nexport const editProfile = ( name, email ) => {\n  return fetch(`${mainApiUrl}/users/me`, {\n    method: 'PATCH',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `${localStorage.getItem('jwt')}`\n    },\n    body: JSON.stringify({\n      name: name,\n      email: email\n    })\n  })\n  .then(checkResponse)\n}\n\n\n//// КАРТОЧКИ ////\n\n// Создание фильма\n// Сохраняем пришедший с API фильм локально\n\nexport const createLocalCard = (movie) => {\n  return fetch(`${mainApiUrl}/movies`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `${localStorage.getItem('jwt')}`\n    }, \n    body: {\n      country: movie.country,\n      director: movie.director,\n      duration: movie.duration,\n      year: movie.year,\n      description: movie.description,\n      image: `https://api.nomoreparties.co/beatfilm-movies${movie.image.mainApiUrl}`,\n      trailerLink: movie.trailerLink,\n      nameRU: movie.nameRU,\n      nameEN: movie.nameEN,\n      thumbnail: `https://api.nomoreparties.co/beatfilm-movies${movie.image.formats.thumbnail.url}`,\n      movieId: movie.id,\n    }\n  })\n  .then(checkResponse)\n}\n\n// Снятие лайка\n\nexport const deleteLocalMovie = (movieId) => {\n  return fetch(`${mainApiUrl}/movies/movieId`, {\n    method: 'DELETE',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `${localStorage.getItem('jwt')}`\n    }\n  })\n  .then(checkResponse)\n}\n\n// Получение сохраненных карточек\n\nexport const getSavedMovies = () => {\n  return fetch(`${mainApiUrl}/movies`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `${localStorage.getItem('jwt')}`\n    }\n  })\n  .then(checkResponse)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}