{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nexport function FormValidation() {\n  _s();\n\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isValid, setIsValid] = useState(false);\n\n  const isValidEmail = email => {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  };\n\n  const handleChange = event => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    setValues({ ...values,\n      [name]: value\n    });\n    setErrors({ ...errors,\n      [name]: target.validationMessage\n    });\n    setIsValid(target.closest(\"form\").checkValidity());\n  }; // const resetForm = useCallback(\n  //   (newValues = {}, newErrors = {}, newIsValid = false) => {\n  //     setValues(newValues);\n  //     setErrors(newErrors);\n  //     setIsValid(newIsValid);\n  //   },\n  //   [setValues, setErrors, setIsValid]\n  // );\n\n\n  return {\n    values,\n    handleChange,\n    errors,\n    isValid,\n    setValues,\n    isValidEmail\n  };\n}\n\n_s(FormValidation, \"7iJOb16HwYoHXvRnLtCeIVw0bQw=\");\n\n_c = FormValidation;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormValidation\");","map":{"version":3,"names":["useState","useCallback","FormValidation","values","setValues","errors","setErrors","isValid","setIsValid","isValidEmail","email","test","handleChange","event","target","name","value","validationMessage","closest","checkValidity"],"sources":["/Users/localmoyashi/dev/movies-explorer-frontend/src/utils/validation.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\nexport function FormValidation() {\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isValid, setIsValid] = useState(false);\n\n  const isValidEmail = (email) => {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  }\n\n  const handleChange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    setValues({...values, [name]: value});\n    setErrors({...errors, [name]: target.validationMessage });\n    setIsValid(target.closest(\"form\").checkValidity());\n  };\n\n  // const resetForm = useCallback(\n  //   (newValues = {}, newErrors = {}, newIsValid = false) => {\n  //     setValues(newValues);\n  //     setErrors(newErrors);\n  //     setIsValid(newIsValid);\n  //   },\n  //   [setValues, setErrors, setIsValid]\n  // );\n\n  return { values, handleChange, errors, isValid, setValues, isValidEmail };\n}"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA,OAAO,SAASC,cAAT,GAA0B;EAAA;;EAC/B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;;EAEA,MAAMS,YAAY,GAAIC,KAAD,IAAW;IAC9B,OAAO,eAAeC,IAAf,CAAoBD,KAApB,CAAP;EACD,CAFD;;EAIA,MAAME,YAAY,GAAIC,KAAD,IAAW;IAC9B,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;IACA,MAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;IACA,MAAMC,KAAK,GAAGF,MAAM,CAACE,KAArB;IACAZ,SAAS,CAAC,EAAC,GAAGD,MAAJ;MAAY,CAACY,IAAD,GAAQC;IAApB,CAAD,CAAT;IACAV,SAAS,CAAC,EAAC,GAAGD,MAAJ;MAAY,CAACU,IAAD,GAAQD,MAAM,CAACG;IAA3B,CAAD,CAAT;IACAT,UAAU,CAACM,MAAM,CAACI,OAAP,CAAe,MAAf,EAAuBC,aAAvB,EAAD,CAAV;EACD,CAPD,CAT+B,CAkB/B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,OAAO;IAAEhB,MAAF;IAAUS,YAAV;IAAwBP,MAAxB;IAAgCE,OAAhC;IAAyCH,SAAzC;IAAoDK;EAApD,CAAP;AACD;;GA5BeP,c;;KAAAA,c"},"metadata":{},"sourceType":"module"}